name: Build OnShape Level Generator

on:
  push:
    branches: [ main ]
  
  workflow_dispatch:

jobs:
  build_linux:
    runs-on: ubuntu-18.04
    permissions: write-all
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      release_url: ${{ steps.tag_release.outputs.upload_url }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: qdwang/onshape-level-gen

      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=tag::$(git describe --tags HEAD)"

      - name: Compile
        run: cargo build --release
      
      - name: Create tag release
        if: ${{ !contains(steps.vars.outputs.tag, '-') }}
        id: tag_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          prerelease: false
          draft: false
          body: Automated builds for version releases via Github Actions

      - name: Upload win version build
        if: ${{ !contains(steps.vars.outputs.tag, '-') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.tag_release.outputs.upload_url }}
          asset_path: "target/release/onshape-level-gen"
          asset_name: ${{ format('onshapelevelgen-{0}-linux', steps.vars.outputs.tag) }}
          asset_content_type: application/octet-stream


  build_macos:
    runs-on: macos-11
    needs: [build_linux]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: qdwang/onshape-level-gen

      - name: Compile
        run: cargo build --release
      
      - name: Upload win version build
        if: ${{ !contains(needs.build_linux.outputs.tag, '-') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build_linux.outputs.release_url }}
          asset_path: "target/release/onshape-level-gen"
          asset_name: ${{ format('onshapelevelgen-{0}-macos.exe', needs.build_linux.outputs.tag) }}
          asset_content_type: application/octet-stream

  build_win:
    runs-on: windows-2022
    needs: [build_linux]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: qdwang/onshape-level-gen

      - name: Compile
        run: cargo build --release
      
      - name: Upload win version build
        if: ${{ !contains(needs.build_linux.outputs.tag, '-') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build_linux.outputs.release_url }}
          asset_path: "target/release/onshape-level-gen.exe"
          asset_name: ${{ format('onshapelevelgen-{0}-win.exe', needs.build_linux.outputs.tag) }}
          asset_content_type: application/octet-stream